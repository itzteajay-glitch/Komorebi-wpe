
# The Release Step:
# https://github.com/marketplace/actions/open-sauced-release
# The build and attach step:
# https://github.com/jtdor/build-deb-action
name: Build and Release Pipeline

on:
  push:
    branches:
      - main
      - beta
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Building package files for release
      - uses: actions/checkout@v4
      - uses: jtdor/build-deb-action@v1
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          buildpackage-opts: --build=binary --no-sign
          source-dir: ./releases/wpe2k
          artifacts-dir: ./releases/wpe2k/debian/artifacts
  release:
    needs: build
    name: Generating Semantic Release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "‚òÅÔ∏è  checkout repository"
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      - name: "üöÄ release"
        id: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          SKIP_NPM_PUBLISH: true
          SKIP_DOCKER_PUBLISH: true
        uses: open-sauced/release@v2
      - name: '‚ôªÔ∏è Rename release files w new version'
        env:
          newVer: ${{ env.RELEASE_VERSION }}
        run: |
              mkdir -r ./releases/wpe2k/debian/artifacts/new
              cd ./releases/wpe2k/debian/artifacts
              for file in $(ls | grep wpe2k); do suffix=$(echo $file | cut -d _ -f 3); cp $file ./releases/wpe2k/debian/artifacts/new/wpe2k_$newVer_$suffix; done
    outputs:
      release-tag: ${{ steps.semantic-release.outputs.release-tag }}

  publish:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Publishing release files
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          gh release upload ${{ needs.release.outputs.release-tag }} ./releases/wpe2k/debian/artifacts/new/*