# Including this here for future suffereing
# https://rhysd.github.io/actionlint/
# The Release Step:
# https://github.com/marketplace/actions/open-sauced-release
# The build and attach step:
# https://github.com/jtdor/build-deb-action
name: Build and Release Pipeline

on:
  push:
    branches:
      - main
      - beta
  workflow_dispatch:

jobs:
  release:
    name: Generating Release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "☁️  checkout repository"
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      - name: "🚀 release"
        id: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          SKIP_NPM_PUBLISH: true
          SKIP_DOCKER_PUBLISH: true
        uses: open-sauced/release@v2
    outputs:
      release-tag: ${{ steps.semantic-release.outputs.release-tag }}

  verify-release:
    needs: release
    name: Verify Release
    runs-on: ubuntu-latest
    steps:
      - name: Validating Release
        env:
          release-tag: ${{ needs.release.outputs.release-tag }}
        if: ${{ env.release-tag == '' }}
        run: |
            echo "No new release found"
            exit 1
      - name: Validating Release
        id: verified-release
        env:
          release-tag: ${{ needs.release.outputs.release-tag }}
        if: ${{ env.release-tag != '' }}
        run: |
            echo "New Release Found."
            echo verified-release-tag=${{ env.release-tag }} >> >> $GITHUB_OUTPUT
            exit 0
    outputs:
      verified-release-tag: ${{ steps.verified-release.outputs.verified-release-tag }}

  build:
    needs: verify-release
    name: Build Packages and Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: jtdor/build-deb-action@v1
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          buildpackage-opts: --build=binary --no-sign
          source-dir: ./releases/wpe2k
          artifacts-dir: ./releases/wpe2k/debian/artifacts
      - name: Rename and push files into release
        id: release
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          final-release: ${{ needs.verify-release.outputs.verified-release-tag }}
        run: |
            echo ${{ env.final-release }}
            mkdir -p new
            for file in $(ls ./releases/wpe2k/debian/artifacts | grep wpe2k)
              do
                suffix=$(echo ./releases/wpe2k/debian/artifacts/$file | cut -d _ -f 3)
                cp ./releases/wpe2k/debian/artifacts/$file ./new/wpe2k_$(echo ${{ env.final-release }})_$suffix
              done
            cd ./new
            gh release upload $(echo ${{ env.final-release }}) *